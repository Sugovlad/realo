group = 'com.realo'
version = '0.0.1'

def repos = [
        "discovery": "https://github.com/Sugovlad/discovery.git",
        "gateway": "https://github.com/Sugovlad/gateway.git",
        "ui": "https://github.com/Sugovlad/ui.git",
        "admin-service": "https://github.com/Sugovlad/admin-service.git",
        "api-service": "https://github.com/Sugovlad/api-service.git"
]

def cloneDir = "${projectDir}"

task cloneOrUpdateRepos {
    doLast {
        file(cloneDir).mkdirs()

        repos.each { folderName, repoUrl ->
            def destDir = "${cloneDir}/${folderName}"

            if (file(destDir).exists()) {
                ByteArrayOutputStream output = new ByteArrayOutputStream()

                exec {
                    commandLine 'git', '-C', destDir, 'fetch', '--dry-run'
                    standardOutput = output
                }

                if (output.toString().trim()) {
                    println "Updating ${folderName}..."
                    exec {
                        commandLine 'git', '-C', destDir, 'pull'
                    }
                } else {
                    println "No updates found for ${folderName}."
                }
            } else {
                println "Cloning ${folderName}..."
                exec {
                    commandLine 'git', 'clone', repoUrl, destDir
                }
            }
        }
    }
}


task customBuild {
    dependsOn cloneOrUpdateRepos
}